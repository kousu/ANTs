name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-manylinuxes: # Github only supports Ubuntu natively; for other Linuxes, we need to use Docker
    strategy:
      matrix:
        os: ['centos', 'archlinux']
    runs-on: ubuntu-latest
    container: ${{ matrix.os }}
    steps:
    - name: package
      run: |
        mkdir sct-apps
        uname -a > sct-apps/platform.txt
        set -x # DEBUG
        tar -zcvf sct-apps_${{ matrix.os }}.tar.gz sct-apps/
      continue-on-error: true
    - name: results (DEBUG)
      run: find .
    - name: Upload result
      uses: actions/upload-artifact@v2-preview
      with:
        # there's a lurking bug here: Artifacts can't have ':' in their names,
        # but docker images are named with colons in their names to specify specific versions
        # so if we want to maintain an old "centos:7", say, we're stuck.
        # it's okay for now though.
        name: ants-superbuild_${{ matrix.os }}
        #path: fakeroot/ # this is 2.3G large in this build
        path: sct-apps_${{ matrix.os }}.tar.gz

  build:
    strategy:
      matrix:
        os: [ubuntu-16.04, ubuntu-18.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: package
      run: |
        mkdir sct-apps
        uname -a > sct-apps/platform.txt
        tar -zcvf sct-apps_${{ matrix.os }}.tar.gz sct-apps/
      continue-on-error: true
    - name: results (DEBUG)
      run: find .
    - name: Upload result
      uses: actions/upload-artifact@v2-preview
      with:
        name: ants-superbuild_${{ matrix.os }}
        #path: fakeroot/ # this is 2.3G large in this build
        path: sct-apps_${{ matrix.os }}.tar.gz
  
  release:
    #needs: [build-manylinuxes, build]
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: debug
        run: |
          echo ${{ github.ref }}
          echo ${{ github.sha }}
          echo ${{ toJSON(env) }}
          echo ${{ github.GITHUB_RUN_ID }}
          echo ${{ env.GITHUB_RUN_ID }}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GITHUB_RUN_ID }} # TODO: use .ref, which is the current branch or tag; but then we cannot rerun the build.
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false

      - uses: actions/download-artifact@v1
        with:
          name: ants-superbuild_centos
        continue-on-error: true
      - name: checkin # DEBUG
        run: find .
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./ants-superbuild_centos/sct-apps_centos.tar.gz
          asset_name: sct-apps_centos.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true
 
      - uses: actions/download-artifact@v1
        with:
          name: ants-superbuild_archlinux
        continue-on-error: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ants-superbuild_archlinux/sct-apps_archlinux.tar.gz
          asset_name: sct-apps_archlinux.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true

      - uses: actions/download-artifact@v1
        with:
          name: ants-superbuild_ubuntu-16.04
        continue-on-error: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ants-superbuild_ubuntu-16.04/sct-apps_ubuntu-16.04.tar.gz
          asset_name: sct-apps_ubuntu-16.04.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true

      - uses: actions/download-artifact@v1
        with:
          name: ants-superbuild_ubuntu-18.04
        continue-on-error: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ants-superbuild_ubuntu-18.04/sct-apps_ubuntu-18.04.tar.gz
          asset_name: sct-apps_ubuntu-18.04.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true

      - uses: actions/download-artifact@v1
        with:
          name: ants-superbuild_macos-latest
        continue-on-error: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ants-superbuild_macos-latest/sct-apps_macos-latest.tar.gz
          asset_name: sct-apps_macos-latest.tar.gz
          asset_content_type: application/gzip
        continue-on-error: true
